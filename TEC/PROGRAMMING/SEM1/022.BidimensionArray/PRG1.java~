//first the rows, tjhen the columns
//the lenght of the multidimensional array will be the number of rows
//using length on an element will output the columns 
//
//
/*
 *create bidimensional array
 input columnsLIM
 input rows
 arr = makearray(columnsLIM, rows)
    def makearray()
        cols = make n arrays (cols) filled with randInt()
        make x arrays (rows) using cols
 print beautifyarray(arr)
    def beautifyarray()
        for i in range[rows[
        print [ + row[i] + ]
print menu()
if option = switchcols
    input(col1)
    input(col2)

a = np.array([[10, 20, 30, 40, 50],
              [ 6,  7,  8,  9, 10]])

# Create the permutation matrix by placing 1 at each row with the column to replace with
your_permutation = [0,4,1,3,2]

perm_mat = np.zeros((len(your_permutation), len(your_permutation)))

for idx, i in enumerate(your_permutation):
    perm_mat[idx, i] = 1

print np.dot(a, perm_mat)

else option = switch rows
    input(row1)
    input(row2)
    back = arr[row1]
    arr[row1]= arr[row2]
    arr[row2]= back
    print arr

    
else option = transpose
else end
 * */
